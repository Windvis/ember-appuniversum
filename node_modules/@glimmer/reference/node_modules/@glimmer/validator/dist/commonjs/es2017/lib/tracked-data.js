"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackedData = trackedData;

var _env = require("@glimmer/env");

var _meta = require("./meta");

var _debug = require("./debug");

var _tracking = require("./tracking");

function trackedData(key, initializer) {
  let values = new WeakMap();
  let hasInitializer = typeof initializer === 'function';

  function getter(self) {
    (0, _tracking.consumeTag)((0, _meta.tagFor)(self, key));
    let value; // If the field has never been initialized, we should initialize it

    if (hasInitializer && !values.has(self)) {
      value = initializer.call(self);
      values.set(self, value);
    } else {
      value = values.get(self);
    }

    return value;
  }

  function setter(self, value) {
    if (_env.DEBUG) {
      (0, _debug.assertTagNotConsumed)((0, _meta.tagFor)(self, key), self, key, true);
    }

    (0, _meta.dirtyTagFor)(self, key);
    values.set(self, value);
  }

  return {
    getter,
    setter
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3ZhbGlkYXRvci9saWIvdHJhY2tlZC1kYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFLTSxTQUFBLFdBQUEsQ0FBQSxHQUFBLEVBQUEsV0FBQSxFQUUyQjtBQUUvQixNQUFJLE1BQU0sR0FBRyxJQUFiLE9BQWEsRUFBYjtBQUNBLE1BQUksY0FBYyxHQUFHLE9BQUEsV0FBQSxLQUFyQixVQUFBOztBQUVBLFdBQUEsTUFBQSxDQUFBLElBQUEsRUFBdUI7QUFDckIsOEJBQVcsa0JBQU0sSUFBTixFQUFYLEdBQVcsQ0FBWDtBQUVBLFFBSHFCLEtBR3JCLENBSHFCLENBS3JCOztBQUNBLFFBQUksY0FBYyxJQUFJLENBQUMsTUFBTSxDQUFOLEdBQUEsQ0FBdkIsSUFBdUIsQ0FBdkIsRUFBeUM7QUFDdkMsTUFBQSxLQUFLLEdBQUcsV0FBWSxDQUFaLElBQUEsQ0FBUixJQUFRLENBQVI7QUFDQSxNQUFBLE1BQU0sQ0FBTixHQUFBLENBQUEsSUFBQSxFQUFBLEtBQUE7QUFGRixLQUFBLE1BR087QUFDTCxNQUFBLEtBQUssR0FBRyxNQUFNLENBQU4sR0FBQSxDQUFSLElBQVEsQ0FBUjtBQUNEOztBQUVELFdBQUEsS0FBQTtBQUNEOztBQUVELFdBQUEsTUFBQSxDQUFBLElBQUEsRUFBQSxLQUFBLEVBQW9DO0FBQ2xDLFFBQUEsVUFBQSxFQUFXO0FBQ1QsdUNBQXNCLGtCQUFNLElBQU4sRUFBRCxHQUFDLENBQXRCLEVBQXFCLElBQXJCLEVBQXFCLEdBQXJCLEVBQUEsSUFBQTtBQUNEOztBQUVELDJCQUFXLElBQVgsRUFBQSxHQUFBO0FBQ0EsSUFBQSxNQUFNLENBQU4sR0FBQSxDQUFBLElBQUEsRUFBQSxLQUFBO0FBQ0Q7O0FBRUQsU0FBTztBQUFBLElBQUEsTUFBQTtBQUFVLElBQUE7QUFBVixHQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBERUJVRyB9IGZyb20gJ0BnbGltbWVyL2Vudic7XG5pbXBvcnQgeyB0YWdGb3IsIGRpcnR5VGFnRm9yIH0gZnJvbSAnLi9tZXRhJztcbmltcG9ydCB7IGFzc2VydFRhZ05vdENvbnN1bWVkIH0gZnJvbSAnLi9kZWJ1Zyc7XG5pbXBvcnQgeyBjb25zdW1lVGFnIH0gZnJvbSAnLi90cmFja2luZyc7XG5cbmV4cG9ydCB0eXBlIEdldHRlcjxULCBLIGV4dGVuZHMga2V5b2YgVD4gPSAoc2VsZjogVCkgPT4gVFtLXSB8IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIFNldHRlcjxULCBLIGV4dGVuZHMga2V5b2YgVD4gPSAoc2VsZjogVCwgdmFsdWU6IFRbS10pID0+IHZvaWQ7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFja2VkRGF0YTxUIGV4dGVuZHMgb2JqZWN0LCBLIGV4dGVuZHMga2V5b2YgVD4oXG4gIGtleTogSyxcbiAgaW5pdGlhbGl6ZXI/OiAodGhpczogVCkgPT4gVFtLXVxuKTogeyBnZXR0ZXI6IEdldHRlcjxULCBLPjsgc2V0dGVyOiBTZXR0ZXI8VCwgSz4gfSB7XG4gIGxldCB2YWx1ZXMgPSBuZXcgV2Vha01hcDxULCBUW0tdPigpO1xuICBsZXQgaGFzSW5pdGlhbGl6ZXIgPSB0eXBlb2YgaW5pdGlhbGl6ZXIgPT09ICdmdW5jdGlvbic7XG5cbiAgZnVuY3Rpb24gZ2V0dGVyKHNlbGY6IFQpIHtcbiAgICBjb25zdW1lVGFnKHRhZ0ZvcihzZWxmLCBrZXkpKTtcblxuICAgIGxldCB2YWx1ZTtcblxuICAgIC8vIElmIHRoZSBmaWVsZCBoYXMgbmV2ZXIgYmVlbiBpbml0aWFsaXplZCwgd2Ugc2hvdWxkIGluaXRpYWxpemUgaXRcbiAgICBpZiAoaGFzSW5pdGlhbGl6ZXIgJiYgIXZhbHVlcy5oYXMoc2VsZikpIHtcbiAgICAgIHZhbHVlID0gaW5pdGlhbGl6ZXIhLmNhbGwoc2VsZik7XG4gICAgICB2YWx1ZXMuc2V0KHNlbGYsIHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgPSB2YWx1ZXMuZ2V0KHNlbGYpO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldHRlcihzZWxmOiBULCB2YWx1ZTogVFtLXSk6IHZvaWQge1xuICAgIGlmIChERUJVRykge1xuICAgICAgYXNzZXJ0VGFnTm90Q29uc3VtZWQhKHRhZ0ZvcihzZWxmLCBrZXkpLCBzZWxmLCBrZXksIHRydWUpO1xuICAgIH1cblxuICAgIGRpcnR5VGFnRm9yKHNlbGYsIGtleSk7XG4gICAgdmFsdWVzLnNldChzZWxmLCB2YWx1ZSk7XG4gIH1cblxuICByZXR1cm4geyBnZXR0ZXIsIHNldHRlciB9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==